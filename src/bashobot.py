"""
A discord bot that writes short poems in the style of Matsuo Basho.

When a message begins with PREFIX, message content is passed to a Poet
object that generates a short poem. The bot is very simple and does not log
exceptions.
"""
from basho.src.poet import Poet
from basho.src.consts import *
import json
import discord

client = discord.Client()
basho = Poet(HEADER, CORPUS)


@client.event
async def on_message(message):
    """
    Sends a poem (as text) when called by a message beginning with PREFIX. What
    follows the PREFIX is the seed for the poem. Any exception prompts the user
    to try again.
    """
    # Return if for whatever reason the bot is the user
    if message.author == client.user:
        return
    # Hardcoded upper bound to prevent malicious use of the bot
    if message.content.startswith(PREFIX) and len(message.content) < 50:
        seed = message.content[2:]
        try:
            poem = format_poem(basho.generate(SIZE, seed))
            await message.channel.send(poem)
        except:
            await message.channel.send("Try again, {}.".format(message.author.mention))


def format_poem(poem):
    """
    Formats the poem.

    Parameter poem: a string generated by a call to openai.Completion()
    Precondition: poem is a string of a poem, with lines separated by "/" and
    ending in "\n"
    """
    text = poem.replace("\n", "")
    text = text.replace("/", "\n")
    ix = text.rindex("\n")
    text = text[:ix+1] + "\t" + poem[ix+1:]
    return text


client.run(TOKEN)
